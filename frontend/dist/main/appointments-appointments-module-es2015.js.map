{"version":3,"sources":["./src/app/patient/appointments/past-appointment/past-appointment.service.ts","./src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.html","./src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.html","./src/app/patient/appointments/today-appointment/today-appointment.component.ts","./src/app/patient/appointments/today-appointment/today-appointment.component.html","./src/app/patient/appointments/appointments-routing.module.ts","./src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.html","./src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.ts","./src/app/patient/appointments/upcoming-appointment/upcoming-appointment.service.ts","./src/app/patient/appointments/upcoming-appointment/upcoming-appointment.model.ts","./src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.ts","./src/app/patient/appointments/past-appointment/past-appointment.component.ts","./src/app/patient/appointments/today-appointment/today-appointment.component.sass","./src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.html","./src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.html","./src/app/patient/appointments/past-appointment/past-appointment.component.sass","./src/app/patient/appointments/appointments.module.ts","./src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.ts","./src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.ts","./src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.sass","./src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.sass","./src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.sass","./src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.sass","./src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.sass","./src/app/patient/appointments/past-appointment/past-appointment.component.html","./src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.ts"],"names":[],"mappings":"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","file":"appointments-appointments-module-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { PastAppointment } from \"./past-appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable()\r\nexport class PastAppointmentService {\r\n  private readonly API_URL = \"assets/data/past-appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<PastAppointment[]> = new BehaviorSubject<\r\n    PastAppointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): PastAppointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPastAppointment(): void {\r\n    this.httpClient.get<PastAppointment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addPastAppointment(appointment: PastAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePastAppointment(appointment: PastAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePastAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","export default \"<p>delete works!</p>\\r\\n\";","export default \"<div class=\\\"addContainer\\\">\\r\\n  <div class=\\\"modalHeader\\\">\\r\\n    <div class=\\\"editRowModal\\\">\\r\\n      <div class=\\\"modalHeader clearfix\\\">\\r\\n        <img [src]='appointment.img' alt=\\\"avatar\\\">\\r\\n        <div class=\\\"modal-about\\\">\\r\\n          <div class=\\\"font-weight-bold p-t-5 msl-3 font-17\\\">\\r\\n            {{dialogTitle}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div mat-dialog-content>\\r\\n    <form class=\\\"register-form m-4\\\" [formGroup]=\\\"appointmentForm\\\" (ngSubmit)=\\\"submit\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width \\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Doctor Name</mat-label>\\r\\n            <mat-select formControlName=\\\"doctor\\\" required>\\r\\n              <mat-option [value]=\\\"'Dr.Rajesh'\\\">\\r\\n                Dr.Rajesh\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"'Dr.Sarah Smith'\\\">\\r\\n                Dr.Sarah Smith\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"'Dr.Jay Soni'\\\">\\r\\n                Dr.Jay Soni\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"'Dr.Pooja Patel'\\\">\\r\\n                Dr.Pooja Patel\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"' Dr.Jamie Blair'\\\">\\r\\n                Dr.Jamie Blair\\r\\n              </mat-option>\\r\\n              <mat-option [value]=\\\"'Other'\\\">\\r\\n                Other\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"appointmentForm.get('doctor').hasError('required')\\\">\\r\\n              Doctor Name is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Email</mat-label>\\r\\n            <input matInput formControlName=\\\"email\\\" required>\\r\\n            <mat-icon matSuffix>email</mat-icon>\\r\\n            <mat-error\\r\\n              *ngIf=\\\"appointmentForm.get('email').hasError('required') || appointmentForm.get('email').touched\\\">\\r\\n              Please enter a valid email address\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Choose a date</mat-label>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" required>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"appointmentForm.get('date').hasError('required')\\\">\\r\\n              Please select date\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Time</mat-label>\\r\\n            <input matInput formControlName=\\\"time\\\" required>\\r\\n            <mat-icon matSuffix>access_time</mat-icon>\\r\\n            <mat-error *ngIf=\\\"appointmentForm.get('time').hasError('required')\\\">\\r\\n              Please select time\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Mobile</mat-label>\\r\\n            <input matInput formControlName=\\\"mobile\\\" type=\\\"number\\\" required>\\r\\n            <mat-icon matSuffix>phone</mat-icon>\\r\\n            <mat-error *ngIf=\\\"appointmentForm.get('mobile').hasError('required')\\\">\\r\\n              Mobile is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Injury/Condition</mat-label>\\r\\n            <textarea matInput formControlName=\\\"injury\\\"></textarea>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!appointmentForm.valid\\\"\\r\\n              [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-today-appointment\",\r\n  templateUrl: \"./today-appointment.component.html\",\r\n  styleUrls: [\"./today-appointment.component.sass\"],\r\n})\r\nexport class TodayAppointmentComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","export default \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"block-header\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">\\r\\n              <h4 class=\\\"page-title\\\">Appointment</h4>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\r\\n              <a routerLink=\\\"/patient/dashboard\\\">\\r\\n                <i class=\\\"fas fa-home\\\"></i> Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Today</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"header\\\">\\r\\n            <h2>Today's Appointments</h2>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"body\\\">\\r\\n            <ul class=\\\"list-unstyled user-progress list-unstyled-border list-unstyled-noborder\\\">\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig1.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.Cara Stevens</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Radiologist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">09:00-10:00</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">CT scans</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 676545655</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-green\\\">Confirm</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Grand Plains Clinic</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig2.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.John Doe</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Cardiologist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">11:00-11:30</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">heart checkup</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 434656764</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-red\\\">Cancelled</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Genesis Hospital</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig3.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.Airi Satou</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Otolaryngologist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">09:15-10:15 </div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Diseases Of The Ear</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 45345673</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-green\\\">Confirm</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Genesis Laboratory</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig4.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.Angelica Ramos</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Dentist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">11:00-12:00</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Root Canal</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 87654533</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-green\\\">Confirm</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Clemency Hospital</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig6.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.Jens Brincker</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Endocrinologist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">04:00-05:00</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Diabetes</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 45678345</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-red\\\">Cancelled</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Hopevale Clinic</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig7.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.Jamie Blair</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Radiologist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">05:00-05:30</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Diabetes</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 45678345</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-green\\\">Confirm</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Pinevale Medical Center</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n              <li class=\\\"app-list\\\">\\r\\n                <img alt=\\\"image\\\" class=\\\"msr-3 rounded-circle\\\" width=\\\"40\\\" src=\\\"assets/images/user/usrbig8.jpg\\\">\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">Dr.Nikki Barton</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">Endocrinologist</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title font-16\\\">12 June '20</div>\\r\\n                  <div class=\\\"text-job text-muted mb-0\\\">06:00-07:00</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Treatement</div>\\r\\n                  <div class=\\\"text-job font-16\\\">X-Ray</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Contact Number</div>\\r\\n                  <div class=\\\"text-job font-16\\\">+123 45678345</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Status</div>\\r\\n                  <div class=\\\"col-orange\\\">Pending</div>\\r\\n                </div>\\r\\n                <div class=\\\"set-flex\\\">\\r\\n                  <div class=\\\"media-title text-muted mb-0\\\">Location</div>\\r\\n                  <div class=\\\"text-job font-16\\\">Hopevale Clinic</div>\\r\\n                </div>\\r\\n                <div class=\\\"media-cta\\\">\\r\\n                  <td>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-confirm\\\">\\r\\n                      <mat-icon>done</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button class=\\\"btn-tbl-reject\\\">\\r\\n                      <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </div>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nimport { UpcomingAppointmentComponent } from \"./upcoming-appointment/upcoming-appointment.component\";\r\nimport { PastAppointmentComponent } from \"./past-appointment/past-appointment.component\";\r\nimport { TodayAppointmentComponent } from \"./today-appointment/today-appointment.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"today\",\r\n    component: TodayAppointmentComponent,\r\n  },\r\n  {\r\n    path: \"upcoming\",\r\n    component: UpcomingAppointmentComponent,\r\n  },\r\n  {\r\n    path: \"past\",\r\n    component: PastAppointmentComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppointmentsRoutingModule {}\r\n","export default \"<div class=\\\"container\\\">\\r\\n  <h3 mat-dialog-title>Are you sure?</h3>\\r\\n  <div mat-dialog-content>\\r\\n    <ul class=\\\"clearfix\\\">\\r\\n      <li>\\r\\n        <p><span class=\\\"font-weight-bold\\\"> Name: </span>{{data.doctor}}</p>\\r\\n      </li>\\r\\n      <li>\\r\\n        <p><span class=\\\"font-weight-bold\\\"> Email: </span>{{ data.email }}</p>\\r\\n      </li>\\r\\n      <li>\\r\\n        <p>\\r\\n          <span class=\\\"font-weight-bold\\\">Mobile: </span>{{data.mobile}}\\r\\n        </p>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div mat-dialog-actions class=\\\"mb-1\\\">\\r\\n    <button mat-flat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">\\r\\n      Delete\\r\\n    </button>\\r\\n    <button mat-flat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { UpcomingAppointment } from \"./upcoming-appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable()\r\nexport class UpcomingAppointmentService {\r\n  private readonly API_URL = \"assets/data/upcoming-appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<UpcomingAppointment[]> = new BehaviorSubject<\r\n    UpcomingAppointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): UpcomingAppointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllUpcomingAppointment(): void {\r\n    this.httpClient.get<UpcomingAppointment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addUpcomingAppointment(appointment: UpcomingAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateUpcomingAppointment(appointment: UpcomingAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteUpcomingAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { formatDate } from \"@angular/common\";\r\nexport class UpcomingAppointment {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  gender: string;\r\n  date: string;\r\n  time: string;\r\n  mobile: string;\r\n  doctor: string;\r\n  injury: string;\r\n  constructor(appointment) {\r\n    {\r\n      this.id = appointment.id || this.getRandomID();\r\n      this.img = appointment.avatar || \"assets/images/user/user1.jpg\";\r\n      this.name = appointment.name || \"\";\r\n      this.email = appointment.email || \"\";\r\n      this.gender = appointment.gender || \"male\";\r\n      this.date = formatDate(new Date(), \"yyyy-MM-dd\", \"en\") || \"\";\r\n      this.time = appointment.time || \"\";\r\n      this.mobile = appointment.mobile || \"\";\r\n      this.doctor = appointment.mobile || \"\";\r\n      this.injury = appointment.mobile || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"./upcoming-appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { UpcomingAppointment } from \"./upcoming-appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\n@Component({\r\n  selector: \"app-upcoming-appointment\",\r\n  templateUrl: \"./upcoming-appointment.component.html\",\r\n  styleUrls: [\"./upcoming-appointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class UpcomingAppointmentComponent implements OnInit {\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"doctor\",\r\n    \"date\",\r\n    \"time\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: UpcomingAppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<UpcomingAppointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: UpcomingAppointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: UpcomingAppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<UpcomingAppointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: this.appointment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.appointmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.appointmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new UpcomingAppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<UpcomingAppointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: UpcomingAppointment[] = [];\r\n  renderedData: UpcomingAppointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: UpcomingAppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<UpcomingAppointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllUpcomingAppointment();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: UpcomingAppointment) => {\r\n            const searchStr = (\r\n              appointment.email +\r\n              appointment.date +\r\n              appointment.time +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: UpcomingAppointment[]): UpcomingAppointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"doctor\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PastAppointmentService } from \"./past-appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { PastAppointment } from \"./past-appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PastDeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\n@Component({\r\n  selector: \"app-past-appointment\",\r\n  templateUrl: \"./past-appointment.component.html\",\r\n  styleUrls: [\"./past-appointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class PastAppointmentComponent implements OnInit {\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"doctor\",\r\n    \"date\",\r\n    \"time\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PastAppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<PastAppointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: PastAppointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: PastAppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<PastAppointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(PastDeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PastAppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<PastAppointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: PastAppointment[] = [];\r\n  renderedData: PastAppointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: PastAppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<PastAppointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPastAppointment();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: PastAppointment) => {\r\n            const searchStr = (\r\n              appointment.email +\r\n              appointment.date +\r\n              appointment.time +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: PastAppointment[]): PastAppointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"doctor\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b2RheS1hcHBvaW50bWVudC5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"block-header\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">\\r\\n              <h4 class=\\\"page-title\\\">Upcoming</h4>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\r\\n              <a routerLink=\\\"/patient/dashboard\\\">\\r\\n                <i class=\\\"fas fa-home\\\"></i> Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Upcoming Appointments</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"body\\\">\\r\\n            <div class=\\\"responsive_table\\\">\\r\\n              <div class=\\\"materialTableHeader\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-8\\\">\\r\\n                    <ul class=\\\"header-buttons-left ms-0\\\">\\r\\n                      <li class=\\\"dropdown\\\">\\r\\n                        <h2>\\r\\n                          <strong>Upcoming Appointments</strong></h2>\\r\\n                      </li>\\r\\n                      <li class=\\\"dropdown m-l-20\\\">\\r\\n                        <label for=\\\"search-input\\\"><i class=\\\"material-icons search-icon\\\">search</i></label>\\r\\n                        <input placeholder=\\\"Search\\\" type=\\\"text\\\" #filter class=\\\"browser-default search-field\\\"\\r\\n                          aria-label=\\\"Search box\\\">\\r\\n                      </li>\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo m-l-10\\\" [hidden]=!selection.hasValue()>\\r\\n                          <button mat-mini-fab color=\\\"warn\\\" (click)=\\\"removeSelectedRows()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">delete</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-4\\\">\\r\\n                    <ul class=\\\"header-buttons\\\">\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo\\\">\\r\\n                          <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">add</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo\\\">\\r\\n                          <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"refresh()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">refresh</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-cell\\\">\\r\\n                <!-- Checkbox Column -->\\r\\n                <ng-container matColumnDef=\\\"select\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'tbl-col-width-per-6'\\\">\\r\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                      [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                      [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\" [ngClass]=\\\"'tbl-checkbox'\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"'tbl-col-width-per-6'\\\">\\r\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                      [checked]=\\\"selection.isSelected(row)\\\" [ngClass]=\\\"'tbl-checkbox'\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <!-- ID Column -->\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"img\\\">\\r\\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\\\"'tbl-col-width-per-5'\\\"> Image\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell mat-cell *matCellDef=\\\"let row\\\" class=\\\"table-img tbl-col-width-per-5\\\"> <img\\r\\n                      [src]=\\\"row.img\\\" />\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"doctor\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.doctor}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"email\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.email}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"date\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Date</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.date | date: 'MM/dd/yyyy' }}\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"time\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Time</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.time}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"mobile\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.mobile}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"injury\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.injury}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <!-- actions -->\\r\\n                <ng-container matColumnDef=\\\"actions\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef class=\\\"pr-0\\\">Actions</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row; let i=index;\\\" class=\\\"pr-0\\\">\\r\\n                    <button mat-icon-button color=\\\"accent\\\" class=\\\"btn-tbl-edit\\\" (click)=\\\"$event.stopPropagation()\\\"\\r\\n                      (click)=\\\"editCall(row)\\\">\\r\\n                      <mat-icon aria-label=\\\"Edit\\\" class=\\\"col-white\\\">edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button color=\\\"accent\\\" class=\\\"btn-tbl-delete\\\" (click)=\\\"$event.stopPropagation()\\\"\\r\\n                      (click)=\\\"deleteItem(i, row)\\\">\\r\\n                      <mat-icon aria-label=\\\"Delete\\\" class=\\\"col-white\\\">delete</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <!-- <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row> -->\\r\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"editCall(row)\\\"\\r\\n                  [style.cursor]=\\\"'pointer'\\\" matRipple>\\r\\n                </mat-row>\\r\\n              </mat-table>\\r\\n              <!-- Loading spinner -->\\r\\n              <div *ngIf=\\\"exampleDatabase.isTblLoading\\\" class=\\\"tbl-spinner\\\">\\r\\n                <mat-progress-spinner color=\\\"primary\\\" [diameter]=\\\"40\\\" mode=\\\"indeterminate\\\">\\r\\n                </mat-progress-spinner>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!exampleDatabase.isTblLoading\\\" class=\\\"no-results\\\"\\r\\n                [style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\r\\n                No results\\r\\n              </div>\\r\\n              <mat-paginator #paginator [length]=\\\"dataSource.filteredData.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\"\\r\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n              </mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <h3 mat-dialog-title>Are you sure?</h3>\\r\\n  <div mat-dialog-content>\\r\\n    <ul class=\\\"clearfix\\\">\\r\\n      <li>\\r\\n        <p><span class=\\\"font-weight-bold\\\"> Name: </span>{{data.doctor}}</p>\\r\\n      </li>\\r\\n      <li>\\r\\n        <p><span class=\\\"font-weight-bold\\\"> Email: </span>{{ data.email }}</p>\\r\\n      </li>\\r\\n      <li>\\r\\n        <p>\\r\\n          <span class=\\\"font-weight-bold\\\">Mobile: </span>{{data.mobile}}\\r\\n        </p>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div mat-dialog-actions class=\\\"mb-1\\\">\\r\\n    <button mat-flat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">\\r\\n      Delete\\r\\n    </button>\\r\\n    <button mat-flat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXN0LWFwcG9pbnRtZW50LmNvbXBvbmVudC5zYXNzIn0= */\";","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { AppointmentsRoutingModule } from \"./appointments-routing.module\";\r\nimport { UpcomingAppointmentComponent } from \"./upcoming-appointment/upcoming-appointment.component\";\r\nimport { DeleteDialogComponent } from \"./upcoming-appointment/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./upcoming-appointment/dialogs/form-dialog/form-dialog.component\";\r\nimport { PastAppointmentComponent } from \"./past-appointment/past-appointment.component\";\r\nimport { PastDeleteDialogComponent } from \"./past-appointment/dialogs/delete/delete.component\";\r\nimport { TodayAppointmentComponent } from \"./today-appointment/today-appointment.component\";\r\nimport { DeleteComponent } from \"./today-appointment/dialogs/delete/delete.component\";\r\nimport { UpcomingAppointmentService } from \"./upcoming-appointment/upcoming-appointment.service\";\r\nimport { PastAppointmentService } from \"./past-appointment/past-appointment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UpcomingAppointmentComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    PastAppointmentComponent,\r\n    PastDeleteDialogComponent,\r\n    TodayAppointmentComponent,\r\n    DeleteComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppointmentsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDatatableModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [UpcomingAppointmentService, PastAppointmentService],\r\n})\r\nexport class AppointmentsModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"../../upcoming-appointment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: UpcomingAppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deleteUpcomingAppointment(this.data.id);\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PastAppointmentService } from \"../../past-appointment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class PastDeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PastDeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: PastAppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deletePastAppointment(this.data.id);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWxldGUuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGNvbWluZy1hcHBvaW50bWVudC5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtLWRpYWxvZy5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWxldGUuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWxldGUuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"block-header\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">\\r\\n              <h4 class=\\\"page-title\\\">Past</h4>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\r\\n              <a routerLink=\\\"/patient/dashboard\\\">\\r\\n                <i class=\\\"fas fa-home\\\"></i> Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Past Appointments</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"body\\\">\\r\\n            <div class=\\\"responsive_table\\\">\\r\\n              <div class=\\\"materialTableHeader\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-8\\\">\\r\\n                    <ul class=\\\"header-buttons-left ms-0\\\">\\r\\n                      <li class=\\\"dropdown\\\">\\r\\n                        <h2>\\r\\n                          <strong>Past Appointments</strong></h2>\\r\\n                      </li>\\r\\n                      <li class=\\\"dropdown m-l-20\\\">\\r\\n                        <label for=\\\"search-input\\\"><i class=\\\"material-icons search-icon\\\">search</i></label>\\r\\n                        <input placeholder=\\\"Search\\\" type=\\\"text\\\" #filter class=\\\"browser-default search-field\\\"\\r\\n                          aria-label=\\\"Search box\\\">\\r\\n                      </li>\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo m-l-10\\\" [hidden]=!selection.hasValue()>\\r\\n                          <button mat-mini-fab color=\\\"warn\\\" (click)=\\\"removeSelectedRows()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">delete</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-cell\\\">\\r\\n                <!-- Checkbox Column -->\\r\\n                <ng-container matColumnDef=\\\"select\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'tbl-col-width-per-6'\\\">\\r\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                      [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                      [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\" [ngClass]=\\\"'tbl-checkbox'\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"'tbl-col-width-per-6'\\\">\\r\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                      [checked]=\\\"selection.isSelected(row)\\\" [ngClass]=\\\"'tbl-checkbox'\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <!-- ID Column -->\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"img\\\">\\r\\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\\\"'tbl-col-width-per-5'\\\"> Image\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell mat-cell *matCellDef=\\\"let row\\\" class=\\\"table-img tbl-col-width-per-5\\\"> <img\\r\\n                      [src]=\\\"row.img\\\" />\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"doctor\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.doctor}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"email\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.email}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"date\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Date</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.date | date: 'MM/dd/yyyy' }}\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"time\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Time</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.time}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"mobile\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.mobile}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"injury\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.injury}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <!-- actions -->\\r\\n                <ng-container matColumnDef=\\\"actions\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef class=\\\"pr-0\\\">Actions</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row; let i=index;\\\" class=\\\"pr-0\\\">\\r\\n                    <button mat-icon-button color=\\\"accent\\\" class=\\\"btn-tbl-delete\\\" (click)=\\\"$event.stopPropagation()\\\"\\r\\n                      (click)=\\\"deleteItem(i, row)\\\">\\r\\n                      <mat-icon aria-label=\\\"Delete\\\" class=\\\"col-white\\\">delete</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <!-- <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row> -->\\r\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [style.cursor]=\\\"'pointer'\\\" matRipple>\\r\\n                </mat-row>\\r\\n              </mat-table>\\r\\n              <!-- Loading spinner -->\\r\\n              <div *ngIf=\\\"exampleDatabase.isTblLoading\\\" class=\\\"tbl-spinner\\\">\\r\\n                <mat-progress-spinner color=\\\"primary\\\" [diameter]=\\\"40\\\" mode=\\\"indeterminate\\\">\\r\\n                </mat-progress-spinner>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!exampleDatabase.isTblLoading\\\" class=\\\"no-results\\\"\\r\\n                [style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\r\\n                No results\\r\\n              </div>\\r\\n              <mat-paginator #paginator [length]=\\\"dataSource.filteredData.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\"\\r\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n              </mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"../../upcoming-appointment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { UpcomingAppointment } from \"../../upcoming-appointment.model\";\r\nimport { MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  appointmentForm: FormGroup;\r\n  appointment: UpcomingAppointment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: UpcomingAppointmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      console.log(data.appointment.date);\r\n      this.dialogTitle = data.appointment.doctor;\r\n      this.appointment = data.appointment;\r\n    } else {\r\n      this.dialogTitle = \"New Appointment\";\r\n      this.appointment = new UpcomingAppointment({});\r\n    }\r\n    this.appointmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.appointment.id],\r\n      img: [this.appointment.img],\r\n      email: [\r\n        this.appointment.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      date: [\r\n        formatDate(this.appointment.date, \"yyyy-MM-dd\", \"en\"),\r\n        [Validators.required],\r\n      ],\r\n      time: [this.appointment.time, [Validators.required]],\r\n      mobile: [this.appointment.mobile, [Validators.required]],\r\n      doctor: [this.appointment.doctor, [Validators.required]],\r\n      injury: [this.appointment.injury],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.appointmentService.addUpcomingAppointment(\r\n      this.appointmentForm.getRawValue()\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}