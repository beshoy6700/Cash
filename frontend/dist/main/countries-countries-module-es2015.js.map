{"version":3,"sources":["./src/app/admin/countries/all-countries/all-countries.component.html","./src/app/admin/countries/countries.service.ts","./src/app/admin/countries/countries-routing.module.ts","./src/app/admin/countries/all-countries/all-countries.component.sass","./src/app/admin/countries/add-country/add-country.component.sass","./src/app/admin/countries/all-countries/all-countries.component.ts","./src/app/admin/countries/edit-country/edit-country.component.sass","./src/app/admin/countries/add-country/add-country.component.ts","./src/app/admin/countries/countries.module.ts","./src/app/admin/countries/add-country/add-country.component.html","./src/app/admin/countries/edit-country/edit-country.component.ts","./src/app/admin/countries/edit-country/edit-country.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,itBAAkpB,+qBAA+qB,E;;;;;;;;;;;;;;;;;;;ACAvyC;AACoB;AACC;IAQjD,gBAAgB,SAAhB,gBAAgB;IAG3B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFzB,YAAO,GAAG,GAAG,qEAAW,CAAC,MAAM,mBAAmB,CAAC;IAGpE,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;QACvD,yDAAyD;IAC3D,CAAC;IAED,MAAM,CAAC,OAAO;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC9D,CAAC;CACF;;YAvBO,+DAAU;;AASL,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAc5B;AAd4B;;;;;;;;;;;;;;;;;;;;;;ACVY;AACc;AACuB;AACN;AACG;AAE3E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,4FAAqB;KACjC;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,sFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,yFAAoB;KAChC;CAEF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAI;AAA1B,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAI;AAAJ;;;;;;;;;;;;;AC1BnC;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;ACAhM;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;;;;;;;;;;;;;ACArH;AACjB;AAIN;AAWiB;IAQpD,qBAAqB,SAArB,qBAAqB;IAWhC,YAAmB,UAAsB,EACrB,OAAyB;QAD1B,eAAU,GAAV,UAAU,CAAY;QACrB,YAAO,GAAP,OAAO,CAAkB;QAX5B,YAAO,GAAG,GAAG,qEAAW,CAAC,MAAM,uBAAuB,CAAC;QAExE,SAAI,GAAG,EAAE,CAAC;QACV,eAAU,GAAG,WAAW,CAAC;QACzB,YAAO,GAAG;YACR,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,QAAQ,EAAE;YAClB,EAAE,IAAI,EAAE,MAAM,EAAE;SACjB,CAAC;IAG8C,CAAC;IAEjD,WAAW;QACT,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SAC1B;IACH,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACH,eAAe;IACb,QAAQ;QACP,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IACH,QAAQ,CAAC,OAAO;QAEhB;2CACmC;IACnC,CAAC;CAEA;;YAzDO,+DAAU;YAJV,mEAAgB;;AAuBX,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,0FAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAsCjC;AAtCiC;;;;;;;;;;;;;ACxBlC;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;ACA9I;IAOrC,mBAAmB,SAAnB,mBAAmB;IAE9B,gBAAgB,CAAC;IAGjB,QAAQ;QACN;;;;YAII;IACN,CAAC;CAGF;;AAdY,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAc/B;AAd+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPO;AACM;AAEqB;AACY;AACzB;AACqB;AACG;AAClB;AACK;AACT;AACQ;AACC;AACT;AACO;AACL;AACJ;AACI;AACJ;AACM;AACF;AACQ;AACZ;AACQ;AACG;AACY;IAoC/D,eAAe,SAAf,eAAe;CAC3B;AADY,eAAe;IAjC3B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,4FAAqB;YACrB,sFAAmB;YACnB,yFAAoB;SACrB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,gFAAsB;YACtB,0EAAkB;YAClB,0DAAW;YACX,kEAAmB;YACnB,uEAAc;YACd,+EAAkB;YAClB,gFAAkB;YAClB,uEAAc;YACd,8EAAiB;YACjB,yEAAe;YACf,qEAAa;YACb,yEAAe;YACf,qEAAa;YACb,2EAAgB;YAChB,yEAAe;YACf,iFAAmB;YACnB,qEAAa;YACb,6EAAiB;YACjB,gFAAuB;YACvB,4FAAwB;SACzB;QACD,SAAS,EAAE;YACT,mEAAgB;SACjB;KACF,CAAC;GACW,eAAe,CAC3B;AAD2B;;;;;;;;;;;;;AC7D5B;AAAe,itBAAkpB,yYAAyY,E;;;;;;;;;;;;;;;;;;;;;ACAx/B;IAOrC,oBAAoB,SAApB,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAOhC;AAPgC;;;;;;;;;;;;;ACPjC;AAAe,6FAA8B,E","file":"countries-countries-module-es2015.js","sourcesContent":["export default \"<section class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"block-header\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\n            <li class=\\\"breadcrumb-item\\\">\\n              <h4 class=\\\"page-title\\\">قائمة الدول</h4>\\n            </li>\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\n              <a routerLink=\\\"/admin/dashboard/main\\\">\\n                <i class=\\\"fas fa-home\\\"></i> الرئيسية</a>\\n            </li>\\n            <li class=\\\"breadcrumb-item bcrumb-2\\\">\\n              <a href=\\\"#\\\" onClick=\\\"return false;\\\">Doctors</a>\\n            </li>\\n            <li class=\\\"breadcrumb-item active\\\">View</li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"body\\\">\\n\\n            <ngx-datatable class=\\\"material\\\"\\n                           [rows]=\\\"rows\\\" [columns]=\\\"columns\\\" [sortType]=\\\"'multi'\\\" [columnMode]=\\\"'force'\\\"\\n                           [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\" [limit]=\\\"10\\\">\\n            </ngx-datatable>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\";","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {environment} from \"../../../environments/environment\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {Countries} from \"./countries.model\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n  private readonly API_URL = `${environment.apiUrl}/admin/countries/`;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAll() {\n    return this.httpClient.get<any>(this.API_URL + 'list');\n    // return this.httpClient.get<Countries[]>(this.API_URL);\n  }\n\n  create(country) {\n    return this.httpClient.post(this.API_URL+'create', country);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AllCountriesComponent} from \"./all-countries/all-countries.component\";\nimport {AddCountryComponent} from \"./add-country/add-country.component\";\nimport {EditCountryComponent} from \"./edit-country/edit-country.component\";\n\nconst routes: Routes = [\n  {\n    path: 'allCountries',\n    component: AllCountriesComponent\n  },\n  {\n    path: 'add-country',\n    component: AddCountryComponent\n  },\n  {\n    path: 'edit-country',\n    component: EditCountryComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CountriesRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGwtY291bnRyaWVzLmNvbXBvbmVudC5zYXNzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtY291bnRyeS5jb21wb25lbnQuc2FzcyJ9 */\";","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {CountriesService} from \"../countries.service\";\nimport {ExampleDataSource} from \"../../doctors/alldoctors/alldoctors.component\";\nimport {DataSource, SelectionModel} from \"@angular/cdk/collections\";\nimport {Countries} from \"../countries.model\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {FormDialogComponent} from \"../../doctors/alldoctors/dialogs/form-dialog/form-dialog.component\";\nimport {DeleteDialogComponent} from \"../../doctors/alldoctors/dialogs/delete/delete.component\";\nimport {BehaviorSubject, fromEvent, merge, Observable} from \"rxjs\";\nimport {Doctors} from \"../../doctors/alldoctors/doctors.model\";\nimport {DoctorsService} from \"../../doctors/alldoctors/doctors.service\";\nimport {map} from \"rxjs/operators\";\nimport {environment} from \"../../../../environments/environment\";\n\n\n@Component({\n  selector: 'app-all-countries',\n  templateUrl: './all-countries.component.html',\n  styleUrls: ['./all-countries.component.sass']\n})\nexport class AllCountriesComponent implements OnInit {\n  private readonly API_URL = `${environment.apiUrl}/admin/countries/list`;\n  countries: any[];\n  rows = [];\n  tableStyle = 'bootstrap';\n  columns = [\n    { name: 'Name' },\n    { name: 'Status' },\n    { name: 'Slug' }\n  ];\n\n  constructor(public httpClient: HttpClient,\n              private service: CountriesService) {}\n\n  switchStyle() {\n    if (this.tableStyle == 'dark') {\n      this.tableStyle = 'bootstrap';\n    } else {\n      this.tableStyle = 'dark';\n    }\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n// HBGC~-h}qiLB\n  loadData() {\n   this.service.getAll().subscribe((data) => {\n     this.countries = data.countries;\n      this.rows = this.countries;\n      }\n    );\n  }\nonRemove(country)\n{\n/*  let index = this.countries.indexOf(country);\n  this.countries.splice(index,1);*/\n}\n\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LWNvdW50cnkuY29tcG9uZW50LnNhc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-add-country',\n  templateUrl: './add-country.component.html',\n  styleUrls: ['./add-country.component.sass']\n})\nexport class AddCountryComponent implements OnInit {\n\n  constructor() { }\n\n  register: FormGroup;\n  ngOnInit() {\n    /*this.register = this.fb.group({\n      first: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\n      last: [''],\n      termcondition: [false, [Validators.requiredTrue]],\n    })*/\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {CountriesRoutingModule} from './countries-routing.module';\nimport {AllCountriesComponent} from './all-countries/all-countries.component';\nimport {CountriesService} from \"./countries.service\";\nimport { AddCountryComponent } from './add-country/add-country.component';\nimport { EditCountryComponent } from './edit-country/edit-country.component';\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MaterialFileInputModule} from \"ngx-material-file-input\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n\n@NgModule({\n  declarations: [\n    AllCountriesComponent,\n    AddCountryComponent,\n    EditCountryComponent\n  ],\n  imports: [\n    CommonModule,\n    CountriesRoutingModule,\n    NgxDatatableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [\n    CountriesService\n  ]\n})\nexport class CountriesModule {\n}\n","export default \"<section class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"block-header\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\n            <li class=\\\"breadcrumb-item\\\">\\n              <h4 class=\\\"page-title\\\">قائمة الدول</h4>\\n            </li>\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\n              <a routerLink=\\\"/admin/dashboard/main\\\">\\n                <i class=\\\"fas fa-home\\\"></i> الرئيسية</a>\\n            </li>\\n            <li class=\\\"breadcrumb-item bcrumb-2\\\">\\n              <a href=\\\"#\\\" onClick=\\\"return false;\\\">Doctors</a>\\n            </li>\\n            <li class=\\\"breadcrumb-item active\\\">View</li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"body\\\">\\n\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-country',\n  templateUrl: './edit-country.component.html',\n  styleUrls: ['./edit-country.component.sass']\n})\nexport class EditCountryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<p>edit-country works!</p>\\n\";"],"sourceRoot":"webpack:///"}