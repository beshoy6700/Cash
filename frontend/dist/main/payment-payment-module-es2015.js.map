{"version":3,"sources":["./src/app/admin/payment/allpayment/payment.service.ts","./src/app/admin/payment/allpayment/payment.model.ts","./src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.ts","./src/app/admin/payment/invoice/invoice.component.html","./src/app/admin/payment/allpayment/allpayment.component.ts","./src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.html","./src/app/admin/payment/allpayment/dialog/delete/delete.component.html","./src/app/admin/payment/add-payment/add-payment.component.html","./src/app/admin/payment/add-payment/add-payment.component.ts","./src/app/admin/payment/allpayment/dialog/form-dialog/form-dialog.component.sass","./src/app/admin/payment/allpayment/dialog/delete/delete.component.ts","./src/app/admin/payment/payment.module.ts","./src/app/admin/payment/payment-routing.module.ts","./src/app/admin/payment/allpayment/dialog/delete/delete.component.sass","./src/app/admin/payment/add-payment/add-payment.component.sass","./src/app/admin/payment/allpayment/allpayment.component.html","./src/app/admin/payment/invoice/invoice.component.sass","./src/app/admin/payment/invoice/invoice.component.ts","./src/app/admin/payment/allpayment/allpayment.component.sass"],"names":[],"mappings":"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","file":"payment-payment-module-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Payment } from \"./payment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable()\r\nexport class PaymentService {\r\n  private readonly API_URL = \"assets/data/payment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Payment[]> = new BehaviorSubject<Payment[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Payment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPayments(): void {\r\n    this.httpClient.get<Payment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addPayment(payment: Payment): void {\r\n    this.dialogData = payment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, payment).subscribe(data => {\r\n      this.dialogData = payment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePayment(payment: Payment): void {\r\n    this.dialogData = payment;\r\n\r\n    /* this.httpClient.put(this.API_URL + payment.id, payment).subscribe(data => {\r\n      this.dialogData = payment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePayment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","export class Payment {\r\n  id: number;\r\n  pName: string;\r\n  dName: string;\r\n  charges: string;\r\n  tax: string;\r\n  date: string;\r\n  discount: string;\r\n  total: string;\r\n  constructor(payment) {\r\n    {\r\n      this.id = payment.id || this.getRandomID();\r\n      this.pName = payment.pName || \"\";\r\n      this.dName = payment.dName || \"\";\r\n      this.charges = payment.charges || \"\";\r\n      this.tax = payment.tax || \"\";\r\n      this.date = payment.date || \"\";\r\n      this.discount = payment.discount || \"\";\r\n      this.total = payment.total || \"\";\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PaymentService } from \"../../payment.service\";\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from \"@angular/forms\";\r\nimport { Payment } from \"../../payment.model\";\r\n@Component({\r\n  selector: \"app-form-dialog\",\r\n  templateUrl: \"./form-dialog.component.html\",\r\n  styleUrls: [\"./form-dialog.component.sass\"],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  paymentForm: FormGroup;\r\n  payment: Payment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public paymentService: PaymentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === \"edit\") {\r\n      this.dialogTitle = data.payment.pName;\r\n      this.payment = data.payment;\r\n    } else {\r\n      this.dialogTitle = \"New Payment\";\r\n      this.payment = new Payment({});\r\n    }\r\n    this.paymentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl(\"\", [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError(\"required\")\r\n      ? \"Required field\"\r\n      : this.formControl.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.payment.id],\r\n      pName: [this.payment.pName],\r\n      dName: [this.payment.dName],\r\n      charges: [this.payment.charges],\r\n      date: [this.payment.date],\r\n      tax: [this.payment.tax],\r\n      discount: [this.payment.discount],\r\n      total: [this.payment.total],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.paymentService.addPayment(this.paymentForm.getRawValue());\r\n  }\r\n}\r\n","export default \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"block-header\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">\\r\\n              <h4 class=\\\"page-title\\\">Invoice</h4>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\r\\n              <a routerLink=\\\"/admin/dashboard/main\\\">\\r\\n                <i class=\\\"fas fa-home\\\"></i> Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-2\\\">\\r\\n              <a href=\\\"#\\\" onClick=\\\"return false;\\\">Payment</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Invoice</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"white-box\\\">\\r\\n                  <h3>\\r\\n                    <b>INVOICE</b>\\r\\n                    <span class=\\\"pull-right\\\">#345766</span>\\r\\n                  </h3>\\r\\n                  <hr>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"pull-left\\\">\\r\\n                        <address>\\r\\n                          <img src=\\\"assets/images/invoice_logo.png\\\" alt=\\\"logo\\\" class=\\\"logo-default\\\" />\\r\\n                          <p class=\\\"text-muted m-l-5\\\">\\r\\n                            D 103, Cliniva Hospital, <br> Opp. Town Hall, <br>\\r\\n                            Sardar Patel Road, <br> Ahmedabad - 380015\\r\\n                          </p>\\r\\n                        </address>\\r\\n                      </div>\\r\\n                      <div class=\\\"pull-right text-end\\\">\\r\\n                        <address>\\r\\n                          <p class=\\\"addr-font-h3 font-bold\\\">BILL TO :</p>\\r\\n                          <p class=\\\"font-bold addr-font-h4\\\">Jayesh Patel</p>\\r\\n                          <p class=\\\"text-muted m-l-30\\\">\\r\\n                            207, Prem Sagar Appt.,\\r\\n                            <br> Near Income Tax Office,\\r\\n                            <br> Ashram Road,\\r\\n                            <br> Ahmedabad - 380057\\r\\n                          </p>\\r\\n                          <p class=\\\"m-t-30\\\">\\r\\n                            <b>Invoice Date :</b>\\r\\n                            <i class=\\\"fa fa-calendar\\\"></i> 14th July 2017\\r\\n                          </p>\\r\\n                          <p>\\r\\n                            <b>Status :</b>\\r\\n                            <span class=\\\"label label-success\\\">Success</span>\\r\\n                          </p>\\r\\n                        </address>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"table-responsive m-t-40\\\">\\r\\n                        <table class=\\\"table table-hover\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th class=\\\"text-center\\\">#</th>\\r\\n                              <th>Detail</th>\\r\\n                              <th class=\\\"text-end\\\">Quantity</th>\\r\\n                              <th class=\\\"text-end\\\">Unit Cost</th>\\r\\n                              <th class=\\\"text-end\\\">Charges</th>\\r\\n                              <th class=\\\"text-end\\\">Discount</th>\\r\\n                              <th class=\\\"text-end\\\">Total</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr>\\r\\n                              <td class=\\\"text-center\\\">1</td>\\r\\n                              <td>Visiting Charges</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">$100</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">$100</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                              <td class=\\\"text-center\\\">2</td>\\r\\n                              <td>Medicines</td>\\r\\n                              <td class=\\\"text-end\\\">10</td>\\r\\n                              <td class=\\\"text-end\\\">$15</td>\\r\\n                              <td class=\\\"text-end\\\">$150</td>\\r\\n                              <td class=\\\"text-end\\\">5</td>\\r\\n                              <td class=\\\"text-end\\\">$1000</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                              <td class=\\\"text-center\\\">3</td>\\r\\n                              <td>X-ray Reports</td>\\r\\n                              <td class=\\\"text-end\\\">4</td>\\r\\n                              <td class=\\\"text-end\\\">$600</td>\\r\\n                              <td class=\\\"text-end\\\">$70</td>\\r\\n                              <td class=\\\"text-end\\\">5</td>\\r\\n                              <td class=\\\"text-end\\\">$1200</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                              <td class=\\\"text-center\\\">4</td>\\r\\n                              <td>MRI</td>\\r\\n                              <td class=\\\"text-end\\\">2</td>\\r\\n                              <td class=\\\"text-end\\\">$245</td>\\r\\n                              <td class=\\\"text-end\\\">$125</td>\\r\\n                              <td class=\\\"text-end\\\">10</td>\\r\\n                              <td class=\\\"text-end\\\">$480</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                              <td class=\\\"text-center\\\">5</td>\\r\\n                              <td>Other Charges</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">-</td>\\r\\n                              <td class=\\\"text-end\\\">$300</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <div class=\\\"pull-right m-t-30 text-end\\\">\\r\\n                        <p>Sub - Total amount: $2600</p>\\r\\n                        <p>Discount : $100 </p>\\r\\n                        <p>vat (10%) : $160 </p>\\r\\n                        <hr>\\r\\n                        <h3><b>Total :</b> $2760</h3>\\r\\n                      </div>\\r\\n                      <div class=\\\"clearfix\\\"></div>\\r\\n                      <hr>\\r\\n                      <div class=\\\"text-end\\\">\\r\\n                        <button mat-flat-button color=\\\"primary\\\"><i class=\\\"fas fa-print\\\"></i>\\r\\n                          Print</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PaymentService } from \"./payment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { Payment } from \"./payment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FormDialogComponent } from \"./dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialog/delete/delete.component\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\n@Component({\r\n  selector: \"app-allpayment\",\r\n  templateUrl: \"./allpayment.component.html\",\r\n  styleUrls: [\"./allpayment.component.sass\"],\r\n})\r\nexport class AllpaymentComponent implements OnInit {\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"pName\",\r\n    \"dName\",\r\n    \"charges\",\r\n    \"date\",\r\n    \"tax\",\r\n    \"disc\",\r\n    \"total\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PaymentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Payment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  payment: Payment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public paymentService: PaymentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        payment: this.payment,\r\n        action: \"add\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.paymentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        payment: row,\r\n        action: \"edit\",\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.paymentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem(\"isRtl\") === \"true\") {\r\n      tempDirection = \"rtl\";\r\n    } else {\r\n      tempDirection = \"ltr\";\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Payment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PaymentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Payment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Payment[] = [];\r\n  renderedData: Payment[] = [];\r\n  constructor(\r\n    public exampleDatabase: PaymentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Payment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPayments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((payment: Payment) => {\r\n            const searchStr = (\r\n              payment.pName +\r\n              payment.dName +\r\n              payment.charges +\r\n              payment.date +\r\n              payment.tax\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Payment[]): Payment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"pName\":\r\n          [propertyA, propertyB] = [a.pName, b.pName];\r\n          break;\r\n        case \"dName\":\r\n          [propertyA, propertyB] = [a.dName, b.dName];\r\n          break;\r\n        case \"charges\":\r\n          [propertyA, propertyB] = [a.charges, b.charges];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"discount\":\r\n          [propertyA, propertyB] = [a.discount, b.discount];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"addContainer\\\">\\r\\n  <div class=\\\"modalHeader\\\">\\r\\n    <div class=\\\"editRowModal\\\">\\r\\n      <div class=\\\"modalHeader clearfix\\\">\\r\\n        <div class=\\\"modal-about\\\">\\r\\n          <div class=\\\"font-weight-bold p-t-5 msl-3 font-17\\\">\\r\\n            {{dialogTitle}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close dialog\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div mat-dialog-content>\\r\\n    <form class=\\\"register-form m-4\\\" [formGroup]=\\\"paymentForm\\\" (ngSubmit)=\\\"submit\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Patient Name</mat-label>\\r\\n            <input matInput formControlName=\\\"pName\\\" required>\\r\\n            <mat-icon matSuffix>face</mat-icon>\\r\\n            <mat-error *ngIf=\\\"paymentForm.get('pName').hasError('required')\\\">\\r\\n              Patient Name is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Doctor Name</mat-label>\\r\\n            <input matInput formControlName=\\\"dName\\\" required>\\r\\n            <mat-icon matSuffix>perm_identity</mat-icon>\\r\\n            <mat-error *ngIf=\\\"paymentForm.get('dName').hasError('required')\\\">\\r\\n              Doctor Name is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Date</mat-label>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker></mat-datepicker>\\r\\n            <mat-error *ngIf=\\\"paymentForm.get('date').hasError('required')\\\">\\r\\n              Please select date\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Charges</mat-label>\\r\\n            <input matInput formControlName=\\\"charges\\\">\\r\\n            <mat-icon matSuffix>attach_money</mat-icon>\\r\\n            <mat-error *ngIf=\\\"paymentForm.get('charges').hasError('required')\\\">\\r\\n              Charges is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Tax</mat-label>\\r\\n            <input matInput formControlName=\\\"tax\\\">\\r\\n            <mat-icon matSuffix>description</mat-icon>\\r\\n            <mat-error *ngIf=\\\"paymentForm.get('tax').hasError('required')\\\">\\r\\n              Tax is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Discount</mat-label>\\r\\n            <input matInput formControlName=\\\"discount\\\">\\r\\n            <mat-icon matSuffix>local_activity</mat-icon>\\r\\n            <mat-error *ngIf=\\\"paymentForm.get('discount').hasError('required')\\\">\\r\\n              Discount is required\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Total</mat-label>\\r\\n            <input matInput formControlName=\\\"total\\\">\\r\\n            <mat-icon matSuffix>receipt</mat-icon>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\\\">\\r\\n          <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" [type]=\\\"submit\\\" [disabled]=\\\"!paymentForm.valid\\\"\\r\\n              [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <h3 mat-dialog-title>Are you sure?</h3>\\r\\n  <div mat-dialog-content>\\r\\n    <ul class=\\\"clearfix\\\">\\r\\n\\r\\n      <li>\\r\\n        <p><span class=\\\"font-weight-bold\\\">Patient Name: </span>{{ data.pName }}</p>\\r\\n      </li>\\r\\n      <li>\\r\\n        <p><span class=\\\"font-weight-bold\\\">Doctor Name: </span>{{data.dName}}</p>\\r\\n      </li>\\r\\n      <li>\\r\\n        <p>\\r\\n          <span class=\\\"font-weight-bold\\\">Total: </span>{{data.total}}\\r\\n        </p>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div mat-dialog-actions class=\\\"mb-1\\\">\\r\\n    <button mat-flat-button color=\\\"warn\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">\\r\\n      Delete\\r\\n    </button>\\r\\n    <button mat-flat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"block-header\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">\\r\\n              <h4 class=\\\"page-title\\\">Add Payment</h4>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\r\\n              <a routerLink=\\\"/admin/dashboard/main\\\">\\r\\n                <i class=\\\"fas fa-home\\\"></i> Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-2\\\">\\r\\n              <a href=\\\"#\\\" onClick=\\\"return false;\\\">Payment</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">Add Payment</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row clearfix\\\">\\r\\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"header\\\">\\r\\n            <h2><strong>Payment Information</strong></h2>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"body\\\">\\r\\n            <form class=\\\"m-4\\\" [formGroup]=\\\"paymentForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Bill No</mat-label>\\r\\n                    <input matInput formControlName=\\\"bNo\\\" required>\\r\\n                    <mat-error *ngIf=\\\"paymentForm.get('bNo').hasError('required')\\\">\\r\\n                      Bill Number is required\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Patient Name</mat-label>\\r\\n                    <input matInput formControlName=\\\"pName\\\" required>\\r\\n                    <mat-error *ngIf=\\\"paymentForm.get('pName').hasError('required')\\\">\\r\\n                      Patient Name is required\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Doctor Name</mat-label>\\r\\n                    <mat-select formControlName=\\\"dName\\\" required>\\r\\n                      <mat-option [value]=\\\"'1'\\\">\\r\\n                        DR. John Deo\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'2'\\\">\\r\\n                        Dr.Rajesh\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'3'\\\">\\r\\n                        DR. Megha Trivedi\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'4'\\\">\\r\\n                        DR. Smith\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"paymentForm.get('dName').hasError('required')\\\">\\r\\n                      Doctor name is required\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Payment Date</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"pDate\\\" required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                    <mat-error *ngIf=\\\"paymentForm.get('pDate').hasError('required')\\\">\\r\\n                      Please select date\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Discount</mat-label>\\r\\n                    <input matInput formControlName=\\\"discount\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Total Ammount</mat-label>\\r\\n                    <input matInput formControlName=\\\"total\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Payment Method</mat-label>\\r\\n                    <mat-select formControlName=\\\"pMethod\\\" required>\\r\\n                      <mat-option [value]=\\\"'1'\\\">\\r\\n                        Cash\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'2'\\\">\\r\\n                        Cheque\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'3'\\\">\\r\\n                        Credit Card\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'4'\\\">\\r\\n                        Debit Card\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'5'\\\">\\r\\n                        Net Banking\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'6'\\\">\\r\\n                        Insurence\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"paymentForm.get('pMethod').hasError('required')\\\">\\r\\n                      Payment Method is required\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <mat-form-field class=\\\"example-full-width mb-3\\\">\\r\\n                    <mat-label>Payment Status</mat-label>\\r\\n                    <mat-select formControlName=\\\"pStatus\\\" required>\\r\\n                      <mat-option [value]=\\\"'1'\\\">\\r\\n                        Complete\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'2'\\\">\\r\\n                        Pending\\r\\n                      </mat-option>\\r\\n                      <mat-option [value]=\\\"'3'\\\">\\r\\n                        Partial\\r\\n                      </mat-option>\\r\\n                    </mat-select>\\r\\n                    <mat-error *ngIf=\\\"paymentForm.get('pStatus').hasError('required')\\\">\\r\\n                      Payment Status is required\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\\\">\\r\\n                  <button class=\\\"btn-space\\\" mat-raised-button color=\\\"primary\\\">Submit</button>\\r\\n                  <button type=\\\"button\\\" mat-button>Cancel</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-add-payment\",\r\n  templateUrl: \"./add-payment.component.html\",\r\n  styleUrls: [\"./add-payment.component.sass\"],\r\n})\r\nexport class AddPaymentComponent {\r\n  paymentForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.paymentForm = this.fb.group({\r\n      bNo: [\"\", [Validators.required]],\r\n      pName: [\"\", [Validators.required]],\r\n      dName: [\"\", [Validators.required]],\r\n      pDate: [\"\", [Validators.required]],\r\n      dDate: [\"\", [Validators.required]],\r\n      discount: [\"\"],\r\n      total: [\"\"],\r\n      pMethod: [\"\", [Validators.required]],\r\n      pStatus: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"Form Value\", this.paymentForm.value);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtLWRpYWxvZy5jb21wb25lbnQuc2FzcyJ9 */\";","import { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { PaymentService } from \"../../payment.service\";\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.sass\"],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public paymentService: PaymentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.paymentService.deletePayment(this.data.id);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { PaymentRoutingModule } from \"./payment-routing.module\";\r\nimport { AddPaymentComponent } from \"./add-payment/add-payment.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { AllpaymentComponent } from \"./allpayment/allpayment.component\";\r\nimport { FormDialogComponent } from \"./allpayment/dialog/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./allpayment/dialog/delete/delete.component\";\r\nimport { PaymentService } from \"./allpayment/payment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddPaymentComponent,\r\n    InvoiceComponent,\r\n    AllpaymentComponent,\r\n    FormDialogComponent,\r\n    DeleteDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatDatepickerModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [PaymentService],\r\n})\r\nexport class PaymentModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddPaymentComponent } from \"./add-payment/add-payment.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { AllpaymentComponent } from \"./allpayment/allpayment.component\";\r\nimport { Page404Component } from \"./../../authentication/page404/page404.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: \"add-payment\",\r\n    component: AddPaymentComponent,\r\n  },\r\n  {\r\n    path: \"all-payment\",\r\n    component: AllpaymentComponent,\r\n  },\r\n  {\r\n    path: \"invoice\",\r\n    component: InvoiceComponent,\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWxldGUuY29tcG9uZW50LnNhc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtcGF5bWVudC5jb21wb25lbnQuc2FzcyJ9 */\";","export default \"<section class=\\\"content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"block-header\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <ul class=\\\"breadcrumb breadcrumb-style \\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">\\r\\n              <h4 class=\\\"page-title\\\">All Payment</h4>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-1\\\">\\r\\n              <a routerLink=\\\"/admin/dashboard/main\\\">\\r\\n                <i class=\\\"fas fa-home\\\"></i> Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item bcrumb-2\\\">\\r\\n              <a href=\\\"#\\\" onClick=\\\"return false;\\\">Payments</a>\\r\\n            </li>\\r\\n            <li class=\\\"breadcrumb-item active\\\">All Payment</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <div class=\\\"materialTableHeader\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-8\\\">\\r\\n                    <ul class=\\\"header-buttons-left ms-0\\\">\\r\\n                      <li class=\\\"dropdown\\\">\\r\\n                        <h2>\\r\\n                          <strong>Payment</strong></h2>\\r\\n                      </li>\\r\\n                      <li class=\\\"dropdown m-l-20\\\">\\r\\n                        <label for=\\\"search-input\\\"><i class=\\\"material-icons search-icon\\\">search</i></label>\\r\\n                        <input placeholder=\\\"Search\\\" type=\\\"text\\\" #filter class=\\\"browser-default search-field\\\"\\r\\n                          aria-label=\\\"Search box\\\">\\r\\n                      </li>\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo m-l-10\\\" [hidden]=!selection.hasValue()>\\r\\n                          <button mat-mini-fab color=\\\"warn\\\" (click)=\\\"removeSelectedRows()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">delete</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-4\\\">\\r\\n                    <ul class=\\\"header-buttons\\\">\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo\\\">\\r\\n                          <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">add</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                      <li>\\r\\n                        <div class=\\\"icon-button-demo\\\">\\r\\n                          <button mat-mini-fab color=\\\"primary\\\" (click)=\\\"refresh()\\\">\\r\\n                            <mat-icon class=\\\"col-white\\\">refresh</mat-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-cell\\\">\\r\\n                <!-- Checkbox Column -->\\r\\n                <ng-container matColumnDef=\\\"select\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'tbl-col-width-per-6'\\\">\\r\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                      [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                      [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\" [ngClass]=\\\"'tbl-checkbox'\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"'tbl-col-width-per-6'\\\">\\r\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                      [checked]=\\\"selection.isSelected(row)\\\" [ngClass]=\\\"'tbl-checkbox'\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <!-- ID Column -->\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"pName\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Patient Name</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.pName}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"dName\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.dName}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"charges\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Charges</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.charges}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"date\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"tax\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Tax</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.tax}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"disc\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Discount</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.discount}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"total\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Total</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{row.total}}</mat-cell>\\r\\n                </ng-container>\\r\\n                <!-- actions -->\\r\\n                <ng-container matColumnDef=\\\"actions\\\">\\r\\n                  <mat-header-cell *matHeaderCellDef class=\\\"pr-0\\\">Actions</mat-header-cell>\\r\\n                  <mat-cell *matCellDef=\\\"let row; let i=index;\\\" class=\\\"pr-0\\\">\\r\\n                    <button mat-icon-button color=\\\"accent\\\" class=\\\"btn-tbl-edit\\\" (click)=\\\"$event.stopPropagation()\\\"\\r\\n                      (click)=\\\"editCall(row)\\\">\\r\\n                      <mat-icon aria-label=\\\"Edit\\\" class=\\\"col-white\\\">edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button color=\\\"accent\\\" class=\\\"btn-tbl-delete\\\" (click)=\\\"$event.stopPropagation()\\\"\\r\\n                      (click)=\\\"deleteItem(i, row)\\\">\\r\\n                      <mat-icon aria-label=\\\"Delete\\\" class=\\\"col-white\\\">delete</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-cell>\\r\\n                </ng-container>\\r\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <!-- <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row> -->\\r\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"editCall(row)\\\"\\r\\n                  [style.cursor]=\\\"'pointer'\\\" matRipple>\\r\\n                </mat-row>\\r\\n              </mat-table>\\r\\n              <!-- Loading spinner -->\\r\\n              <div *ngIf=\\\"exampleDatabase.isTblLoading\\\" class=\\\"tbl-spinner\\\">\\r\\n                <mat-progress-spinner color=\\\"primary\\\" [diameter]=\\\"40\\\" mode=\\\"indeterminate\\\">\\r\\n                </mat-progress-spinner>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!exampleDatabase.isTblLoading\\\" class=\\\"no-results\\\"\\r\\n                [style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\r\\n                No results\\r\\n              </div>\\r\\n              <mat-paginator #paginator [length]=\\\"dataSource.filteredData.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\"\\r\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n              </mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZvaWNlLmNvbXBvbmVudC5zYXNzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-invoice\",\r\n  templateUrl: \"./invoice.component.html\",\r\n  styleUrls: [\"./invoice.component.sass\"],\r\n})\r\nexport class InvoiceComponent implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGxwYXltZW50LmNvbXBvbmVudC5zYXNzIn0= */\";"],"sourceRoot":"webpack:///"}